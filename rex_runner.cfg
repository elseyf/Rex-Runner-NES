MEMORY {
    #RAM Layout:
    ZP:    start = $0000, size = $100;
    STACK: start = $0100, size = $100;
    RAM:   start = $0200, size = $500;
    OAM:   start = $0700, size = $100;
    
    #ROM:
    HEADER: start = $0000, size = $0010, file = %O;
    #PRG0:   start = $8000, size = $4000, file = %O, fill = yes, fillval = $00;
    PRG0:   start = $C000, size = $3FFA, file = %O, fill = yes, fillval = $00;

    #NES CPU Vectors:
    VECTORS:    start = $FFFA, size = $0006, file = %O, fill = yes, fillval = $00;
}

SEGMENTS {
    #Header:
    HEADER:   load = HEADER,         type = ro;

    #ROM:
    RODATA:    load = PRG0,           type = ro,  define = yes;
    DATA:      load = PRG0, run = RAM, type = rw,  define = yes;
    CHRROM:    load = PRG0,           type = ro,  define = yes;
    STARTUP:   load = PRG0,           type = ro,  define = yes;
    CODE:      load = PRG0,           type = ro,  define = yes;
    VECTORS:   load = VECTORS,        type = ro;

    #RAM:
    ZEROPAGE:  load = ZP,             type = zp;
    STACK:     load = STACK           type = bss, define = yes;
    OAM_BUFFER: load = OAM            type = bss, define = yes;
    BSS:       load = RAM,            type = bss, define = yes;
}

#C Stack:
SYMBOLS {
    __STACK_START__: type = weak, value = $0200;
#    __STACK_SIZE__:  type = weak, value = $0100;
}
